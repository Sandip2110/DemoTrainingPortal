{"version":3,"sources":["images/owl.png","images/Kids Reading.svg","Constants/header.tsx","Constants/footer.tsx","Context/index.tsx","utilities/inputFunctions.tsx","pages/utils.tsx","pages/login.tsx","pages/trainings/metaTrainingDetails.tsx","pages/trainings/trainingList.tsx","pages/trainings/currentTraining/sideNav.tsx","pages/trainings/utils.tsx","pages/trainings/currentTraining/content.tsx","pages/trainings/currentTraining/index.tsx","pages/dashboard.tsx","App/index.tsx","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Footer","UserInformationContext","React","createContext","TextField","props","label","type","value","onChange","e","fieldName","target","disabled","placeholder","PageTypes","Status","testLoginResponseJson","token","name","company","orgLoginId","trainings","trainingName","status","priority","lastDate","trainJSON","pages","id","mascotPlacement","mdText","passPercent","questions","question","answers","options","key","optionText","mdExplanation","videoUrl","quizPageId","LoginPage","useState","userId","password","userCredentials","handleChangeUserCredential","getUserInformationContext","useContext","onChangeHandler","prevState","src","logInHero","alt","onClick","validation","message","validateLogin","updateUserInfo","MetaTrainingDetails","styles","INCOMPLETE","border","background","cursor","UPCOMING","EXPIRED","COMPLETE","to","pathname","state","trainingIndex","style","textDecoration","color","borderLeft","backgroundColor","toUpperCase","priorityRank","TrainingList","getTrainings","listOfTrainings","trainingTypes","map","trainingDetails","index","checkFor","includes","getReturnElement","userInfo","SideNav","pageIndex","currentPageIndex","handleClick","navigablePageIndexes","pageType","WELCOME","SECTION_START","QUIZ","INFO_VIDEO","QUIZ_RESULTS","FINISH","getPageName","isAnswerChecked","userAnswers","questionId","hasOwnProperty","getQuizResult","totalCorrectAnswered","quizDetails","reattemptQuiz","totalQuestions","length","userPercentage","width","margin","owl","role","correctAnswers","forEach","getQuize","showCorrectAnswers","handleChange","questionObject","option","ind","undefined","Content","setAnswers","totalCorrectAns","setCorrectAnswers","handleAnswerChange","currentAnswers","splice","indexOf","push","pageDetails","text","height","allow","getInfoVideo","getContentBody","currentValues","obj","JSON","stringify","handleClickNext","handleNext","CurrentTraining","location","totalPages","updatePageIndex","setNavigablePageIndexes","navPageIndexes","handleClickOnSidenav","concat","handlePageChange","pageId","handleReattemptQuiz","Dashboard","exact","path","component","App","Provider","response","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.074225a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/owl.cadd6c8e.png\";","module.exports = __webpack_public_path__ + \"static/media/Kids Reading.8a5390b3.svg\";","import React from 'react';\nimport './styles.css'\n\nexport function Header() {\n    return (\n        <div className=\"header\">\n            <h2>LOGO</h2>\n        </div>\n    )\n}\n","import React from 'react';\nimport './styles.css';\n\nexport const Footer = () => {\n    return (\n        <div className=\"footer\">\n            © 2019 Company Name. All Rights Reserved.\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const UserInformationContext = React.createContext({});\n","import React from 'react';\nimport \"./styles.css\";\n\nexport function TextField(props: any) {\n    return (\n        <div className=\"input-style mt-2 mb-2\">\n            <div className=\"text-left\">\n                <span>{props.label}</span>\n            </div>\n            <input type={props.type}\n                className=\"input-text\"\n                value={props.value !== null ? props.value : \"\"}\n                onChange={(e) => props.onChange(props.fieldName, e.target.value)}\n                disabled={props.disabled ? props.disabled : false}\n                placeholder={props.placeholder ? props.placeholder : \"\"}\n            />\n        </div>\n    )\n}","interface validationTemplate {\n    status: boolean,\n    message: string | null,\n}\n\ninterface UserCredentials {\n    userId: string | null,\n    password: string | null;\n}\nexport enum PageTypes {\n    WELCOME = \"WELCOME\",\n    SECTION_START = \"SECTION_START\",\n    QUIZ = \"QUIZ\",\n    INFO_VIDEO = \"INFO_VIDEO\",\n    QUIZ_RESULTS = \"QUIZ_RESULTS\",\n    FINISH = \"FINISH\"\n\n}\nexport enum Status {\n    INCOMPLETE = \"INCOMPLETE\",\n    UPCOMING = \"UPCOMING\",\n    EXPIRED = \"EXPIRED\",\n    COMPLETE = \"COMPLETE\",\n}\nexport function validateLogin(userCredentials: UserCredentials) {\n    const validation: validationTemplate = {\n        status: true,\n        message: null,\n    }\n\n    if (!userCredentials.userId) {\n        validation.status = false;\n        validation.message = \"Please enter user id\"\n\n        return validation;\n    }\n    if (!userCredentials.password) {\n        validation.status = false;\n        validation.message = \"Please enter password\"\n\n        return validation;\n    }\n\n    return validation;\n}\n\nexport const testLoginResponseJson = {\n\ttoken: \"1234512345\" ,\n\tname: \"Apoorv Kumar\",\n\tcompany: {\n        name: \"org name\",\n        orgLoginId: \"orgLoginId\",\n    },\n\ttrainings: [ \n        { \n            trainingName: \"Training A\",\n            status: \"INCOMPLETE\",\n            priority: 5,\n            lastDate: \"2019-12-20\",\n            trainJSON: {\n                name: \"test name\",\n                pages: [\n                    {id:1, type:\"WELCOME\", mascotPlacement:\"left\", mdText:\"Welcome to the test\"},\n               \n                    {id:2, type:\"SECTION_START\", mascotPlacement:\"\", mdText:\"#In this section we'll see 1, 2 ,3\"},\n               \n                    {id:3, type:\"QUIZ\", passPercent: 80,\n                    questions: [\n                        {\n                            id:1, mdText:\"# Some Info\",\n                            question:\"What is the answer?\", answers: [\"A\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#The answers are correct because blah blah blah\"\n                        },\n                        {\n                            id:2, mdText:\"# Some other info\",\n                            question:\"What is the answer?\", answers: [\"B\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#These answers are correct because blah blah blah\"\n                        }\n                        \n                    ]\n                    },\n                    {id:4, type:\"INFO_VIDEO\", videoUrl: \"https://www.youtube.com/embed/f_r79d5hqZU?rel=0\", mdText: \"#This video talks about blah blah\"},\n               \n                    {id:5, type:\"QUIZ_RESULTS\", quizPageId: 3 },\n                    {id:6, type:\"FINISH\"}\n\n                ]\n            }\n        \n        },\n        { \n            trainingName: \"Training B\",\n            status: \"UPCOMING\",\n            priority: 5,\n            lastDate: \"2020-03-20\",\n            trainJSON: {\n                name: \"test name\",\n                pages: [\n                    {id:1, type:\"WELCOME\", mascotPlacement:\"left\", mdText:\"Welcome to the test\"},\n               \n                    {id:2, type:\"SECTION_START\", mascotPlacement:\"\", mdText:\"#In this section we'll see 1, 2 ,3\"},\n               \n                    {id:3, type:\"QUIZ\", passPercent: 80,\n                    questions: [\n                        {\n                            id:1, mdText:\"# Some Info\",\n                            question:\"What is the answer?\", answers: [\"A\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#The answers are correct because blah blah blah\"\n                        },\n                        {\n                            id:2, mdText:\"# Some other info\",\n                            question:\"What is the answer?\", answers: [\"B\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#These answers are correct because blah blah blah\"\n                        }\n                        \n                    ]\n                    },\n                    {id:4, type:\"INFO_VIDEO\", videoUrl: \"https://www.youtube.com/embed/f_r79d5hqZU?rel=0\", mdText: \"#This video talks about blah blah\"},\n               \n                    {id:5, type:\"QUIZ_RESULTS\", quizPageId: 3 },\n                    {id:6, type:\"FINISH\"}\n\n                ]\n            }\n        \n        },\n        { \n            trainingName: \"training C\",\n            status: \"EXPIRED\",\n            priority: 5,\n            lastDate: \"2019-10-20\",\n            trainJSON: {\n                name: \"test name\",\n                pages: [\n                    {id:1, type:\"WELCOME\", mascotPlacement:\"left\", mdText:\"Welcome to the test\"},\n               \n                    {id:2, type:\"SECTION_START\", mascotPlacement:\"\", mdText:\"#In this section we'll see 1, 2 ,3\"},\n               \n                    {id:3, type:\"QUIZ\", passPercent: 80,\n                    questions: [\n                        {\n                            id:1, mdText:\"# Some Info\",\n                            question:\"What is the answer?\", answers: [\"A\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#The answers are correct because blah blah blah\"\n                        },\n                        {\n                            id:2, mdText:\"# Some other info\",\n                            question:\"What is the answer?\", answers: [\"B\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#These answers are correct because blah blah blah\"\n                        }\n                        \n                    ]\n                    },\n                    {id:4, type:\"INFO_VIDEO\", videoUrl: \"https://www.youtube.com/embed/f_r79d5hqZU?rel=0\", mdText: \"#This video talks about blah blah\"},\n               \n                    {id:5, type:\"QUIZ_RESULTS\", quizPageId: 3 },\n                    {id:6, type:\"FINISH\"}\n\n                ]\n            }\n        \n        },\n        { \n            trainingName: \"training D\",\n            status: \"COMPLETE\",\n            priority: 5,\n            lastDate: \"2019-11-20\",\n            trainJSON: {\n                name: \"test name\",\n                pages: [\n                    {id:1, type:\"WELCOME\", mascotPlacement:\"left\", mdText:\"Welcome to the test\"},\n               \n                    {id:2, type:\"SECTION_START\", mascotPlacement:\"\", mdText:\"#In this section we'll see 1, 2 ,3\"},\n               \n                    {id:3, type:\"QUIZ\", passPercent: 80,\n                    questions: [\n                        {\n                            id:1, mdText:\"# Some Info\",\n                            question:\"What is the answer?\", answers: [\"A\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#The answers are correct because blah blah blah\"\n                        },\n                        {\n                            id:2, mdText:\"# Some other info\",\n                            question:\"What is the answer?\", answers: [\"B\"], options: [{key: \"A\", optionText: \"OPA\"}, {key: \"B\", optionText: \"OPB\"}] ,\n                            mdExplanation: \"#These answers are correct because blah blah blah\"\n                        }\n                        \n                    ]\n                    },\n                    {id:4, type:\"INFO_VIDEO\", videoUrl: \"https://www.youtube.com/embed/f_r79d5hqZU?rel=0\", mdText: \"#This video talks about blah blah\"},\n               \n                    {id:5, type:\"QUIZ_RESULTS\", quizPageId: 3 },\n                    {id:6, type:\"FINISH\"}\n\n                ]\n            }\n        \n        }\n\t]\n}\n","import React, {useState, useContext} from 'react';\nimport {TextField} from \"../utilities/inputFunctions\";\nimport logInHero from \"../images/Kids Reading.svg\";\nimport {validateLogin, testLoginResponseJson} from \"./utils\";\nimport {makePostRequest} from \"../ApiCalls/index\";\nimport {UserInformationContext} from \"../Context/index\";\nimport \"./styles.css\";\n\nexport function LoginPage(props: any) {\n    let [userCredentials, handleChangeUserCredential] = useState({userId: null, password: null});\n    const getUserInformationContext: any = useContext(UserInformationContext)\n\n    function onChangeHandler(fieldName: string, value: string | number) {\n        handleChangeUserCredential((prevState) => {\n            return ({\n                ...prevState,\n                [fieldName]: value\n            });\n        })\n    }\n\n    function handleSubmit() {\n        const validation = validateLogin(userCredentials);\n        if (validation.status) {\n            // let validateLogin = makePostRequest('url', {userId: userCredentials.userId, password: userCredentials.password});\n            // validateLogin.then((response) => {\n            //     getUserInformationContext.updateUserInfo(response.data);\n            // })\n            // validateLogin.catch((error) => {\n            //     error will be added here\n            // })\n            \n            // Using value for testing purpose\n            getUserInformationContext.updateUserInfo(testLoginResponseJson);\n        }\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-6 text-center\">\n                    <img src={logInHero} alt=\"Login Hero\" className=\"width-100\"/>\n                </div>\n                <div className=\"col-sm-6 pl-4 pr-4 mt-4\">\n                    <TextField\n                        type= \"text\"\n                        value = {userCredentials.userId}\n                        onChange = {onChangeHandler}\n                        fieldName = 'userId'\n                        label = \"Please Enter Your User Id\"\n                        placeholder={\"ApoorvKumar\"}\n                    />\n\n                    <TextField\n                        type = \"password\"\n                        value = {userCredentials.password}\n                        onChange = {onChangeHandler}\n                        fieldName = \"password\"\n                        label = \"Please Enter Your Password\"\n                    />\n\n                    <button className=\"submit-login mt-4\"\n                        onClick={handleSubmit}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {Status} from \"../utils\";\nimport \"./styles.css\";\nimport {Link } from 'react-router-dom';\n\ninterface IProps {\n    trainingName: string;\n    status: Status;\n    lastDate: string;\n    priorityRank: number;\n    trainingIndex: number;\n}\n\nexport function MetaTrainingDetails(props: IProps) {\n    const styles: any = {\n        [Status.INCOMPLETE]: {\n            border: \"red\",\n            background: \"#fc9fa2\",\n            cursor: \"pointer\",\n        }, \n        [Status.UPCOMING]: {\n            border: \"gray\",\n            background: \"#EEEDEC\",\n            cursor: \"not-allowed\",\n        },\n        [Status.EXPIRED]: {\n            border: \"#713A02 \",\n            background: \"#FEC790\",\n            cursor: \"not-allowed\",\n        },\n        [Status.COMPLETE]: {\n            border: \"#38A103\",\n            background: \"#99F56C\",\n            cursor: \"not-allowed\",\n        }\n    }\n    function isRedirectable(status: string) {\n        return !(status === Status.EXPIRED || status === Status.UPCOMING || status ===  Status.COMPLETE)\n    }\n    return (\n        <Link to={{pathname: `${isRedirectable(props.status) ? \"/training\" : \"\"}`, state: {trainingIndex: props.trainingIndex}}}\n            style={{ textDecoration: \"none\", color: \"black\"}}\n        >\n            <div className=\"box mt-2 mb-2\"\n                style={{\n                    borderLeft: `solid 4px ${styles[props.status].border}`,\n                    backgroundColor: styles[props.status].background,\n                    cursor: styles[props.status].cursor,\n                }}\n            >\n                <div>\n                    <b className=\"floar-left\">{props.trainingName}</b>\n                    <span className=\"float-right meta-font\">{props.status.toUpperCase()}</span>\n                </div>\n                \n                <div className=\"meta-font mt-2\">\n                    Last Date: {props.lastDate} | Priority Rank: {props.priorityRank}\n                </div>\n            </div>\n        </Link>\n    );\n}","import React, {useContext} from 'react';\nimport {UserInformationContext} from \"../../Context/index\";\nimport {MetaTrainingDetails} from \"./metaTrainingDetails\";\nimport {Status} from \"../utils\";\n\nexport function TrainingList() {\n    const getUserInformationContext: any = useContext(UserInformationContext);\n    \n    function getTrainings(listOfTrainings: any, trainingTypes: string[]) {\n        return listOfTrainings.map((trainingDetails: any, index: number) => {\n            return getReturnElement(index, trainingDetails.trainingName, trainingDetails.status, trainingDetails.lastDate, trainingDetails.priority, trainingTypes);  \n        })\n    }\n\n    function getReturnElement(index: number, trainingName: string, status: Status, lastDate: string, priorityRank: number, checkFor: string[])  {\n        if (checkFor.includes(status)) {\n            return <MetaTrainingDetails\n                    key={index}\n                    trainingIndex={index}\n                    trainingName={trainingName}\n                    status={status}\n                    lastDate={lastDate}\n                    priorityRank={priorityRank}\n                />    \n        } else {\n            return <div key={index}/>\n        }\n    }\n   \n    return (\n        <div className=\"container-height container-fluid justify-content-center main-container\">\n            <div className=\"row mt-4\">    \n                <div className=\"col-md-8 offset-md-2\">\n                    <h3>Current Trainings</h3>\n                    {\n                        getTrainings(getUserInformationContext.userInfo.trainings, [Status.INCOMPLETE, Status.COMPLETE])\n\n                    }\n                </div>\n            </div>\n            <div className=\"row mt-4\">\n                <div className=\"col-md-8 offset-md-2\">\n                    <h3>Upcoming Trainings</h3>\n                    {\n                        getTrainings(getUserInformationContext.userInfo.trainings, [Status.UPCOMING])\n                    }\n                </div>\n            </div> \n            <div className=\"row mt-4\">\n                <div className=\"col-md-8 offset-md-2\">\n                    <h3>Expired Trainings</h3>\n                    {\n                        getTrainings(getUserInformationContext.userInfo.trainings, [Status.EXPIRED])\n                    }\n                </div>\n            </div>   \n        </div>\n    );\n}\n","import React from \"react\";\nimport {PageTypes} from \"../../utils\";\nimport \"./styles.css\";\n\ninterface IProps {\n    pageIndex: number;\n    handleClick: any;\n    pageType: PageTypes;\n    currentPageIndex: number;\n    navigablePageIndexes: number[];\n}\n\nexport function SideNav(props: IProps) {\n    function getPageName(pageType: string) {\n        switch(pageType) {\n            case PageTypes.WELCOME: return \"WELCOME\";\n            case PageTypes.SECTION_START: return \"INTRODUCTION\";\n            case PageTypes.QUIZ: return \"QUIZ\";\n            case PageTypes.INFO_VIDEO: return \"INFO VIDEO\";\n            case PageTypes.QUIZ_RESULTS: return \"RESULTS\";\n            case PageTypes.FINISH: return \"FINISH\";\n        }\n    }\n    return (\n        <div className={`page mt-2 mb-2 ${props.pageIndex === props.currentPageIndex ? \"page-selected\" : \"\"}`}\n            onClick={() => props.handleClick(props.pageIndex, props.navigablePageIndexes)}\n        >\n            <b>{getPageName(props.pageType)}</b>\n        </div>\n    )\n} ","import React from \"react\";\nimport owl from \"../../images/owl.png\";\nimport \"./styles.css\"\n\nfunction isAnswerChecked(userAnswers: any, questionId: number, key: string) {\n    return userAnswers.hasOwnProperty(questionId) && userAnswers[questionId].includes(key)\n}\n\nexport function getIntroductionPages(text: string, mascotPlacement: any) {\n    return (\n        <div className=\"text-center welcome\">\n            <img src={owl} alt=\"mascot\"/>\n            <b className=\"welcome-text\">{text}</b>\n        </div>\n    )\n}\nexport function getFinishPage() {\n    return (\n        <div className=\"mt-4 pt-4 suggestion-box text-center\">\n                    <div>\n                        <div><h4>Thank you for completing the training!</h4></div>\n                        <div>\n                            <textarea className=\"mt-2\">\n                                Do you have any suggestions for us ? Please write us here\n                            </textarea>\n                        </div>\n                        <div>\n                            <button className=\"mt-2 custom-btn\">Submit Suggestion</button>\n                        </div>\n                    </div>\n        </div>\n    )\n}\nexport function getQuizResult(totalCorrectAnswered: any, quizDetails: any, reattemptQuiz: any, quizPageId: number) {\n    const passPercent = quizDetails.passPercent;\n    const totalQuestions = quizDetails.questions.length;\n    const userPercentage = (passPercent && totalQuestions) ? (100/totalQuestions)*totalCorrectAnswered : 0\n    return (\n        <div className=\"result text-center mt-4\">\n            <div style={{width: \"60%\", margin: \"auto\"}}>\n                {(passPercent && userPercentage < passPercent) && <div className=\"row\">\n                    <div className=\"col-sm-3\">\n                        <img src={owl} alt=\"mascot\" style={{width: \"100%\"}}/>\n                    </div>\n                    <div className=\"col-sm-9\">\n                        <div className=\"reattempt-text\">\n                            You scored {userPercentage}% in the quiz. You need {passPercent}% to complete. Please reattempt the quiz.\n                            Check the answers below.\n                        </div>\n                    </div>\n                </div>}\n                <h5>Your Obtained Percentage</h5>\n                <h2 style={{color: (passPercent && userPercentage < passPercent) ? \"red\" : \"green\"}}>{userPercentage}%</h2>\n                <div className=\"progress\">\n                    <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{width: `${userPercentage}%`}}/>\n                </div>\n            </div>\n            {(passPercent && userPercentage < passPercent) && <div>\n                <button className=\"mt-2 custom-btn\"\n                    onClick={() => reattemptQuiz(quizPageId)}\n                >Re-attempt</button>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 text-left\">\n                        {showCorrectAnswers(quizDetails.questions)}\n                    </div>\n                </div>\n            </div>}\n\n            {(passPercent && userPercentage >= passPercent) && <div>\n                <button className=\"mt-4 custom-btn\">Submit Answers</button>\n            </div>}\n        </div>\n    )\n}\nfunction showCorrectAnswers(questions: any) {\n    let correctAnswers: any = {};\n    questions.forEach((question: any) => {\n        correctAnswers[question.id] = question.answers;\n    });\n    return getQuize(questions, correctAnswers)\n}\nexport function getQuize(questions: any, userAnswers: object, handleChange?: any,) {\n    return (\n        <div className=\"question-container\">\n            {\n                questions.map((questionObject: any, index: number) => {\n                    return (\n                        <div className=\"mt-4 mb-4\"\n                            key={index}\n                        >\n                            <span className=\"qsNo mb-4\">Question {index+1}</span>\n                            <div className=\"question mt-2\"> {questionObject.mdText}</div>\n                            <div className=\"options mt-2\">\n                            <div className=\"wdyt\">{questionObject.question}</div>\n                            {questionObject.options.map((option: any, ind: number) => {\n                                return (\n                                    <button value={option.key}\n                                        key={ind}\n                                        className={`option-btn ${isAnswerChecked(userAnswers, questionObject.id, option.key) ? \"checked\" : \"unchecked\"}`}\n                                        onClick={handleChange ? () => handleChange(option.key, questionObject.id) : undefined}\n                                    > \n                                        <i className={`ml-1 mr-2 fa ${isAnswerChecked(userAnswers, questionObject.id, option.key) ? \"fa-check-square-o\" : \"fa-square-o\"}`}></i>\n                                        {option.optionText}\n                                    </button>\n                                )\n                            })}\n                            </div>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport function getInfoVideo(videoUrl: string, text: string) {\n    return (\n        <div className=\"mt-4\">\n            <div className=\"mt-1 mb-2 text-center\">\n                <b>Please watch the video</b>\n            </div>\n            \n            <div className=\"holder text-center\">\n                <iframe width=\"600px\" height= \"300px\" className=\"vidframe\" src={videoUrl} allow={\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"}></iframe>\n                <div className=\"topbar\" onClick={undefined}></div>\n                <div className=\"lowerbar\"  onClick={undefined}></div>\n            </div>\n            <div className=\"iframe-text text-left\">{text}</div>\n        </div>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport {PageTypes} from \"../../utils\";\nimport {getIntroductionPages, getQuize, getInfoVideo, getQuizResult, getFinishPage} from \"../utils\";\nimport \"./styles.css\";\n\ninterface IProps {\n    pageDetails: any;\n    currentPageIndex: number;\n    handleClickNext: any;\n    reattemptQuiz: any;\n}\n\nlet quizDetails: any = null;\n\nexport function Content(props: IProps) {\n    const [userAnswers, setAnswers] = useState<any | any>({});\n    const [totalCorrectAns, setCorrectAnswers] = useState<any | any>(0);\n\n    function handleAnswerChange(key: string, questionId: number) {\n        let currentAnswers = userAnswers;\n        if (currentAnswers.hasOwnProperty(questionId)) {\n            if (currentAnswers[questionId].includes(key)) {\n                currentAnswers[questionId].splice(currentAnswers[questionId].indexOf(key), 1)\n                if (currentAnswers[questionId].length === 0) {\n                    delete currentAnswers[questionId];\n                }\n            } else {\n                currentAnswers[questionId].push(key);\n            }\n        } else {\n            currentAnswers[questionId] = [key];\n        }\n        setAnswers((prevState: any) => {\n            return {\n                ...currentAnswers,\n            }\n        })\n    }\n    function getContentBody(pageDetails: any) {\n        if (pageDetails.type === PageTypes.WELCOME || pageDetails.type === PageTypes.SECTION_START) return getIntroductionPages(pageDetails.mdText, pageDetails.mascotPlacement);\n        if (pageDetails.type === PageTypes.QUIZ) return getQuize(pageDetails.questions, userAnswers, handleAnswerChange);\n        if (pageDetails.type === PageTypes.INFO_VIDEO) return getInfoVideo(pageDetails.videoUrl, pageDetails.mdText);\n        if (pageDetails.type === PageTypes.QUIZ_RESULTS) return getQuizResult(totalCorrectAns, quizDetails, reattemptQuiz, props.pageDetails.quizPageId);\n        if (pageDetails.type === PageTypes.FINISH) return getFinishPage();\n    }\n    function handleNext(pageDetails: any, currentValues: any, pageType: string, currentPageIndex: number) {\n        if (pageType === PageTypes.QUIZ) {\n            let correctAnswers = 0;\n            pageDetails.questions.forEach((obj: any) => {\n                if(currentValues.hasOwnProperty(obj.id)\n                    && currentValues[obj.id].length === obj.answers.length\n                    && JSON.stringify(currentValues[obj.id]) === JSON.stringify(obj.answers)\n                ) {\n                    correctAnswers++;\n                } \n            })\n            quizDetails = pageDetails;\n            setCorrectAnswers(correctAnswers)\n        }\n        props.handleClickNext(currentPageIndex)\n    }\n    function reattemptQuiz(quizPageId: number) {\n        setAnswers({});\n        props.reattemptQuiz(quizPageId);\n    }\n    return (\n        <div>\n            {getContentBody(props.pageDetails)}\n\n            {props.pageDetails.type !== PageTypes.FINISH && <button className=\"next-btn\"\n                onClick={() =>  handleNext(props.pageDetails, userAnswers, props.pageDetails.type, props.currentPageIndex)}\n            >\n                NEXT\n            </button>}\n        </div>\n    )\n}","import React, {useContext, useState} from \"react\";\nimport {UserInformationContext} from \"../../../Context\";\nimport { SideNav } from \"./sideNav\";\nimport {PageTypes} from \"../../utils\";\nimport {Content} from \"./content\";\nimport \"./styles.css\";\n\nexport function CurrentTraining(props: any) {\n    const trainingIndex = props.location.state.trainingIndex;\n    const getUserInformationContext: any = useContext(UserInformationContext);\n    const totalPages = getUserInformationContext.userInfo.trainings[trainingIndex].trainJSON.pages.length;\n    let [pageIndex, updatePageIndex] = useState(0);\n    let [navigablePageIndexes, setNavigablePageIndexes] = useState <number[]>([]);\n\n    function handleClickOnSidenav(index: number, navPageIndexes: number[]) {\n        if (navPageIndexes.includes(index)) {\n            updatePageIndex(index);\n        }\n    }\n    function handlePageChange(currentPageIndex: number) {\n\n        const isLastPage = totalPages === currentPageIndex + 1;\n        if (!isLastPage) {\n            updatePageIndex((currentPageIndex + 1));\n            if (!navigablePageIndexes.includes(currentPageIndex + 1)) {\n                setNavigablePageIndexes(navigablePageIndexes.concat(currentPageIndex + 1))\n            }\n        }\n    }\n    function handleReattemptQuiz(pageId: number) {\n        let index = 0;\n        for (const pageDetails of getUserInformationContext.userInfo.trainings[trainingIndex].trainJSON.pages) {\n            if (pageDetails.id === pageId) {\n                updatePageIndex(index)\n                break;\n            }\n            index++;\n        }\n    }\n    return (\n        <div className=\"container-fluid training-container\">\n            <div className=\"row\">\n                <div className=\"col-sm-2 side-nav\">\n                {getUserInformationContext.userInfo.trainings[trainingIndex].trainJSON.pages.map((pageDetails: any, index: number) => {\n                       return <SideNav\n                                key={index}\n                                currentPageIndex={pageIndex}\n                                navigablePageIndexes={navigablePageIndexes}\n                                pageIndex={index}\n                                pageType={pageDetails.type}\n                                handleClick={(pageIndex: number, navigablePageIndexes: number[]) => handleClickOnSidenav(pageIndex, navigablePageIndexes)}\n                            />\n                   })}\n                </div>\n                <div className=\"col-sm-10\">\n                    <Content\n                        pageDetails = {getUserInformationContext.userInfo.trainings[trainingIndex].trainJSON.pages[pageIndex]}\n                        currentPageIndex = {pageIndex}\n                        handleClickNext={(currentPageIndex: number) => handlePageChange(currentPageIndex)}\n                        reattemptQuiz = {(pageId: number) => handleReattemptQuiz(pageId)}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n} ","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport {TrainingList} from \"./trainings/trainingList\";\nimport {CurrentTraining} from \"./trainings/currentTraining\"\nexport function Dashboard() {\n    return (\n        <div>\n            <Route exact path=\"/\" component={TrainingList}/>\n            <Route path=\"/training\" component={CurrentTraining}/>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport {Header} from '../Constants/header';\nimport {Footer} from '../Constants/footer';\nimport {UserInformationContext} from \"../Context/index\";\nimport {LoginPage} from \"../pages/login\";\nimport {Dashboard} from \"../pages/dashboard\";\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  let [userInfo, updateUserInfo] = useState(null);\n\n  function handleUpdateUserInfo(response: any) {\n    updateUserInfo((prevState) => {\n      return (response);\n    })\n  }\n\n  function getComponent() {\n    if (userInfo) {\n      return (\n        <Router>\n          <Route>\n            <Dashboard/>\n          </Route>\n        </Router>\n      )\n    } else {\n      return <LoginPage/>\n    }\n  }\n\n  return (\n    <div> \n      <Header/>\n      <UserInformationContext.Provider value={{userInfo, updateUserInfo: handleUpdateUserInfo}}>\n        <div className=\"middle-section\">\n          {getComponent()}\n        </div>\n      </UserInformationContext.Provider>\n      <Footer/>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.tsx';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}